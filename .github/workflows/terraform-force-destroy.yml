---

name: Terraform Force Destroy

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/environments/dev

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Remove Resources from State (if exist)
        run: |
          echo "Delete all resources from state"
          RESOURCES=(
            "module.vpc.aws_subnet.public_a"
            "module.vpc.aws_subnet.public_b"
            "module.vpc.aws_subnet.private_a"
            "module.vpc.aws_subnet.private_b"
            "module.vpc.aws_route_table_association.public_a"
            "module.vpc.aws_route_table_association.public_b"
            "module.vpc.aws_route_table_association.private_a"
            "module.vpc.aws_route_table_association.private_b"
            "module.vpc.aws_route_table.public"
            "module.vpc.aws_route_table.private"
            "module.vpc.aws_internet_gateway.igw"
            "module.vpc.aws_vpc.main"
            "module.alb.aws_lb_target_group.cms"
            "module.alb.aws_lb.main"
            "module.alb.aws_lb_listener.http"
            "module.ec2.aws_instance.cms"
            "module.ec2.aws_instance.k3s"
            "module.ec2.aws_security_group.alb"
            "module.ec2.aws_security_group.instance"
            "module.mariadb.aws_db_instance.mariadb"
            "module.mariadb.aws_db_subnet_group.mariadb_subnet_group"
          )

          for res in "${RESOURCES[@]}"; do
            terraform state rm "$res" && echo "Entfernt: $res" \
            || echo "$res nicht im State (ignoriert)"
          done

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var="ami_id=${{ secrets.TF_AMI_ID }}" \
            -var="instance_type=${{ secrets.TF_INSTANCE_TYPE }}" \
            -var="key_name=${{ secrets.TF_KEY_NAME }}" \
            -var="db_password=${{ secrets.TF_DB_PASSWORD }}"
