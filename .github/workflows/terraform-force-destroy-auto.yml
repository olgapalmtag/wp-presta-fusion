---

name: Terraform Force Destroy

on:
  workflow_dispatch:

jobs:
  terraform-force-destroy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/environments/dev

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-3
      TF_VAR_end_user_username: ${{ secrets.CMS_USER_USERNAME }}
      TF_VAR_end_user_password: ${{ secrets.CMS_USER_PASSWORD }}
      TF_VAR_developer_username: ${{ secrets.DEV_USERNAME }}
      TF_VAR_developer_password: ${{ secrets.DEV_PASSWORD }}
      TF_VAR_ops_username: ${{ secrets.OPS_USERNAME }}
      TF_VAR_ops_password: ${{ secrets.OPS_PASSWORD }}
      TF_VAR_sre_username: ${{ secrets.SRE_USERNAME }}
      TF_VAR_sre_password: ${{ secrets.SRE_PASSWORD }}
      TF_VAR_instructor_username: ${{ secrets.INSTRUCTOR_USERNAME }}
      TF_VAR_instructor_password: ${{ secrets.INSTRUCTOR_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.DEV_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DEV_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy (Full)
        run: |
          terraform destroy -auto-approve \
            -var="db_username=${TF_VAR_db_username}" \
            -var="db_password=${TF_VAR_db_password}" \
            -var="end_user_username=${TF_VAR_end_user_username}" \
            -var="end_user_password=${TF_VAR_end_user_password}" \
            -var="developer_username=${TF_VAR_developer_username}" \
            -var="developer_password=${TF_VAR_developer_password}" \
            -var="ops_username=${TF_VAR_ops_username}" \
            -var="ops_password=${TF_VAR_ops_password}" \
            -var="sre_username=${TF_VAR_sre_username}" \
            -var="sre_password=${TF_VAR_sre_password}" \
            -var="instructor_username=${TF_VAR_instructor_username}" \
            -var="instructor_password=${TF_VAR_instructor_password}"
      
      - name: Cleanup orphaned Terraform state (optional)
        if: failure()
        run: |
          echo "Destroy failed. Attempting to clean broken state..."
          terraform state list | grep -E 'iam|s3|alb|db|instance' | while read res; do
            terraform state rm "$res" || echo "$res could not be removed"
          done

